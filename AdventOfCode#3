import os

#if,if,if, 47 sec
#if,elif...44sec
#Future: How to improve speed?
#Future: use the current line_drawer def to find answer A (so using the key value of dict, instead)
        #of tuple...probably pretty trivial to do, still i'd like to try.


# os.chdir(r"\Users\HP\Desktop\coderun") # use terminal 'cd *space* *tab* to get to where u wanna go
print(os.getcwd(),'<--current directory','sanity check')
print(os.listdir(os.getcwd()),'<----files in current dir') #sh
wire1,wire2 = open('w1.txt','r') , open('w2.txt','r')
wire1,wire2 = wire1.read().replace(',',' ').split(), wire2.read().replace(',',' ').split()


#test1 -Pass
# wire1= ['U7','R6','D4','L4']
# wire2=['R8','U5','L5','D3']
# wire1= ['U7','R6','D4','L4']
# wire2=['R8','U5','L5','D3']
# #test 2 PASS -610- w2a,w2b - R75,D30,R83,U83,L12,D49,R71,U7,L72 && U62,R66,U55,R34,D71,R55,D58,R83
#test 3 pass-410-- R98,U47,R26,D63,R33,U87,L62,D20,R33,U53,R51  &&& U98,R91,D20,R16,D67,R40,U7,R15,U6,R7
#goldstar1 - pass attempt1/1
#star#2 - required tuple->dict refactor

def intify(wire):
    list=[]
    for i in wire:
        i=i.replace('R','R ').replace('L','L ').replace('U','U ').replace('D','D ').split()
        i[1]=int(i[1])
        list.append(i)
    return list

def line_drawer(wire):
    x, y, step = 0,0,0
    pos = (x, y)
    d_ele = {pos:step}
    for i in intify(wire):
        if i[0] == 'U':
            while i[1] != 0: # while instructor has valid instruction (has juice in it)
                d_ele.update({(x,y-1):step+1})
                y-=1 #increments down the tuple (otherwise y would always = 0-1, now its -1-1,-2-1)
                i[1]-=1 #increments down the instructor (R26-R25)
                step+=1 #increments the step
        elif i[0] == 'D':
            while i[1] != 0:#####   D
                d_ele.update({(x,y+1):step+1})
                y+=1
                i[1]-=1
                step+=1
        elif i[0] == 'R':
            while i[1] != 0:
                d_ele.update({(x+1,y):step+1})
                x+=1
                i[1]-=1
                step+=1
        elif i[0] == 'L':
            while i[1] != 0:
                d_ele.update({(x-1,y):step+1})
                x-=1
                i[1]-=1
                step+=1
    return d_ele
ans=[]
for key in set(line_drawer(wire1).keys() & line_drawer(wire2).keys()):
    ans.append(line_drawer(wire2)[key]+line_drawer(wire1)[key])
print(sorted(ans))
