import os
import time
import itertools
st=time.time()
os.chdir(r"\Users\HP\Desktop\coderun") # use terminal 'cd *space* *tab* to get to where u wanna go
# print(os.getcwd(),'<--current directory','sanity check')
# print(os.listdir(os.getcwd()),'<----files in current dir') #sh
wire1,wire2 = open('wt1.txt','r') , open('wt2.txt','r')
wire1,wire2 = wire1.read().replace(',',' ').split(), wire2.read().replace(',',' ').split()
# print(wire1)
# print(wire2)


#test1 -Pass
# wire1= ['U7','R6','D4','L4']
# wire2=['R8','U5','L5','D3']
# #test 2 PASS w2a,w2b - R75,D30,R83,U83,L12,D49,R71,U7,L72 && U62,R66,U55,R34,D71,R55,D58,R83
#test 3 - R98,U47,R26,D63,R33,U87,L62,D20,R33,U53,R51  &&& U98,R91,D20,R16,D67,R40,U7,R15,U6,R7
#goldstar1 - pass attempt1/1


# print(type(wire1),wire1[0],wire1)

def intify(wire):
    mlist=[]
    for i in wire:
        # i=i.replace('R','R,').replace('L','L,').replace('U','U,').replace('D','D,')
        i=i.replace('R','R ').replace('L','L ').replace('U','U ').replace('D','D ').split()
        i[1]=int(i[1])
        mlist.append(i)
    # print(type(list),list[3][0],list[0],list) #nested list
    return mlist

def line_drawer(wire):
    x, y, step = 0,0,0

    pos = [(x,y,step)]
    for i in intify(wire): #here im calling the other function ! cool!
        # print('access',i,i[0])
        if i[0] == 'U':
            while i[1] != 0: ####   UI
                pos.append((x,y-1,step+1))
                y-=1
                i[1]-=1
                step+=1
                # print('U',pos)
        if i[0] == 'D':
            while i[1] != 0:#####   D
                pos.append((x,y+1,step+1))
                y+=1
                i[1]-=1
                step+=1
                # print('D',pos)
        if i[0] == 'R':
            while i[1] != 0:
                pos.append((x+1,y,step+1))
                x+=1
                i[1]-=1
                step+=1
                # print('R',pos,step+1)
        if i[0] == 'L':
            while i[1] != 0:
                pos.append((x-1,y,step+1))
                x-=1
                i[1]-=1
                step+=1
                # print('L',pos)
    # print('endof linedrawer',pos,'&',step)
    return pos
def stepless(wire):
    x, y = 0,0
    pos = [(x, y,)]
    for i in intify(wire): #here im calling the other function ! cool!
        # print('access',i,i[0])
        if i[0] == 'U':
            while i[1] != 0: ####   UI
                pos.append((x,y-1))
                y-=1
                i[1]-=1
                # print('U',pos)
        if i[0] == 'D':
            while i[1] != 0:#####   D
                pos.append((x,y+1))
                y+=1
                i[1]-=1
                # print('D',pos)
        if i[0] == 'R':
            while i[1] != 0:
                pos.append((x+1,y))
                x+=1
                i[1]-=1
                # print('R',pos,step+1)
        if i[0] == 'L':
            while i[1] != 0:
                pos.append((x-1,y))
                x-=1
                i[1]-=1
                # print('L',pos)
    # print('endof linedrawer',pos,'&',step)
    return pos

# print(line_drawer(wire1),'\n\n\n',stepless(wire1))
ansi=[]
ansj=[]
for i in line_drawer(wire1):
    for j in stepless(wire2):
        if set(j).issubset(i) and sum(j)>0:
            # print ('losin',j,i)
            ansi.append(i)
            ansj.append(j)

for i in line_drawer(wire2):
    for j in stepless(wire1):
        if set(j).issubset(i) and sum(i)>0:
            # print ('fant',j,i)
            ansi.append(i)
            ansj.append(j)

# ansi=sorted(ansi)
# for i in ansi:
#     print(i)

for i,j in itertools.combinations(ansi,2):
    # print(i,j,i[0],j[0])
    if i[0]==j[0] and i[1]==j[1]:
        print(i[2]+j[2])


et=time.time()
ft=et-st
print(ft,'secs')
# ansj=sorted(ansj)
# for i in ansj:
#     print(i)
# print('wire1',line_drawer(wire1))
# print('wire2',line_drawer(wire2))

# print('patrickhereonthebase',ww1)
# print('i want a brandnewhous',line_drawer(wire1))

# def step_removal(inlist):
#     outlist = []
#     for el in line_drawer(inlist):
#         outlist.append(el[:-1])
#     return outlist

# print(step_removal(wire1))
# print(step_removal(wire2))

# print('orange',set(step_removal(wire1)) & set(step_removal(wire2)))
# sun=set(step_removal(wire1)) & set(step_removal(wire2))
#
#
# print('SET',set(line_drawer(wire1)) & set(line_drawer(wire2)))
# def manhattan():
#     crosses=[]
#     for i in range( min(len(wire1), len(wire2))):
        # print('otis', line_drawer(wire1))
        # print('otis', wire1[i][0], wire2[i][0], wire2[i][1], wire2[i][1])
        # if wire1[i][0] == wire2[i][0] and wire2[i][1] == wire2[i][1]:
        #     print('otis',line_drawer(wire1))#, wire2[i][0], wire2[i][1], wire2[i][1])
    #     cross= abs(i[0])+abs(i[1])
    #     if cross > 0:
    #         crosses.append(cross)
#     # return crosses
#
# # print('answer', min(manhattan()))
# print('check',manhattan())
